aliases:
  - &restore-monorepo-cache
    keys:
      - dependencies-{{ checksum "package.json" }}
      - dependencies-

  - &restore-gluestick-main-cache
    keys:
      - dependencies-gluestick-main-{{ checksum "packages/gluestick/package.json" }}
      - dependencies-gluestick-main-

  - &restore-gluestick-cache
    keys:
      - dependencies-gluestick-v1-{{ checksum "packages_checksum" }}
      - dependencies-gluestick-v1-

  - &restore-repo-cache
    keys:
      - repo-{{ .Environment.CIRCLE_SHA1 }}

  - &save-monorepo-cache
    paths:
      - node_modules
    key: dependencies-{{ checksum "package.json" }}

  - &save-gluestick-main-cache
    paths:
      - packages/gluestick/node_modules
    key: dependencies-gluestick-main-{{ checksum "packages/gluestick/package.json" }}
  
  - &save-gluestick-cache
    paths:
      - packages/gluestick-cli/node_modules
      - packages/gluestick-env-expose-ast/node_modules
      - packages/gluestick-generators/node_modules
      - packages/gluestick-plugin-aphrodite/node_modules
      - packages/gluestick-plugin-bunyan/node_modules
      - packages/gluestick-plugin-eslint/node_modules
      - packages/gluestick-plugin-radium/node_modules
    key: dependencies-gluestick-v1-{{ checksum "packages_checksum" }}

  - &save-repo-cache
    paths:
      - ~/gluestick
    key: repo-{{ .Environment.CIRCLE_SHA1 }}

defaults:
  - &job-defaults
      working_directory: ~/gluestick
      docker:
        - image: circleci/node:8

version: 2
jobs:
  build:
    <<: *job-defaults
    steps:
      - checkout

      - attach_workspace:
          at: ~/gluestick
    
      - run:
          command: cat packages/gluestick-*/package.json > packages_checksum
          name: Creating checksum file for gluesick-* packages

      - restore_cache: *restore-monorepo-cache
      - restore_cache: *restore-gluestick-main-cache
      - restore_cache: *restore-gluestick-cache

      - run: yarn run install:yarn

      - save_cache: *save-monorepo-cache
      - save_cache: *save-gluestick-main-cache
      - save_cache: *save-gluestick-cache

      - save_cache: *save-repo-cache

      - persist_to_workspace:
          root: .
          paths: .
  
  lint:
    <<: *job-defaults
    steps:
      - attach_workspace:
          at: ~/gluestick

      - run: yarn run lint
  
  flow:
    <<: *job-defaults
    steps:
      - attach_workspace:
          at: ~/gluestick

      - run: yarn run flow

  test:
    <<: *job-defaults
    steps:
      - attach_workspace:
          at: ~/gluestick

      - run: yarn run test --coverage

      - store_artifacts:
          path: coverage

  e2e:
    <<: *job-defaults
    steps:
      - checkout

      - attach_workspace:
          at: ~/gluestick

      - run: yarn run build
      - run: yarn run e2e

  deploy:
    <<: *job-defaults
    steps:
      - attach_workspace:
          at: ~/gluestick

      - checkout

      - run: npm config set //registry.npmjs.org/:_authToken $NPM_TOKEN

      - setup_remote_docker

      - run: git config --global user.email $DOCKER_EMAIL
      - run: git config --global user.name "CircleCI"
      - run: ssh-keyscan github.com >> ~/.ssh/known_hosts

      - run: docker pull node:8-slim
      - run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - run: BRANCH=$CIRCLE_BRANCH npm run publish -- $CIRCLE_TAG  

  docs:
    <<: *job-defaults
    steps:
      - checkout

      - attach_workspace:
          at: ~/gluestick

      - run: |
          git diff --name-only HEAD~1 HEAD
          if [[ $(git diff --name-only HEAD~1 HEAD) =~ docs ]]; then
            # Build gitbook and move it to root directory
            yarn run docs:build
            rm -rf ./docs
            mv ./_book/* ./

            git config user.name "CircleCI Docs"
            git config user.email "$DOCKER_EMAIL"

            git add .
            git commit -am 'Update Book'

            # Push generated files to gh-pages
            git push origin $CIRCLE_BRANCH:gh-pages --force
          fi

workflows:
  version: 2
  default:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
      - lint:
          requires:
            - build
          filters:
            branches:
              ignore:  staging
      - flow:
          requires:
            - build
          filters:
            branches:
              ignore: staging
      - test:
          requires:
            - build
          filters:
            branches:
              ignore: staging
      - e2e:
          requires:
            - build
          filters:
            branches:
              only: develop
      - docs:
          requires:
            - build
          filters:
            branches:
              only: develop
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /v\d+\.\d+\.\d+.*/
            branches:
              only: staging
